module Enumerable
  extend RDL
  typesig(:to_a, "(XXXX : *XXXX)")
  typesig(:entries, "(XXXX : *XXXX)")
  typesig(:to_h, "(XXXX : *XXXX)")
  typesig(:sort, "()")
  typesig(:sort_by, "()")
  typesig(:grep, "(XXXX : XXXX)")
  typesig(:count, "(XXXX : *XXXX)")
  typesig(:find, "(XXXX : *XXXX)")
  typesig(:detect, "(XXXX : *XXXX)")
  typesig(:find_index, "(XXXX : *XXXX)")
  typesig(:find_all, "()")
  typesig(:select, "()")
  typesig(:reject, "()")
  typesig(:collect, "()")
  typesig(:map, "()")
  typesig(:flat_map, "()")
  typesig(:collect_concat, "()")
  typesig(:inject, "(XXXX : *XXXX)")
  typesig(:reduce, "(XXXX : *XXXX)")
  typesig(:partition, "()")
  typesig(:group_by, "()")
  typesig(:first, "(XXXX : *XXXX)")
  typesig(:all?, "()")
  typesig(:any?, "()")
  typesig(:one?, "()")
  typesig(:none?, "()")
  typesig(:min, "(XXXX : *XXXX)")
  typesig(:max, "(XXXX : *XXXX)")
  typesig(:minmax, "()")
  typesig(:min_by, "(XXXX : *XXXX)")
  typesig(:max_by, "(XXXX : *XXXX)")
  typesig(:minmax_by, "()")
  typesig(:member?, "(XXXX : XXXX)")
  typesig(:include?, "(XXXX : XXXX)")
  typesig(:each_with_index, "(XXXX : *XXXX)")
  typesig(:reverse_each, "(XXXX : *XXXX)")
  typesig(:each_entry, "(XXXX : *XXXX)")
  typesig(:each_slice, "(XXXX : XXXX)")
  typesig(:each_cons, "(XXXX : XXXX)")
  typesig(:each_with_object, "(XXXX : XXXX)")
  typesig(:zip, "(XXXX : *XXXX)")
  typesig(:take, "(XXXX : XXXX)")
  typesig(:take_while, "()")
  typesig(:drop, "(XXXX : XXXX)")
  typesig(:drop_while, "()")
  typesig(:cycle, "(XXXX : *XXXX)")
  typesig(:chunk, "(XXXX : *XXXX)")
  typesig(:slice_before, "(XXXX : *XXXX)")
  typesig(:slice_after, "(XXXX : *XXXX)")
  typesig(:slice_when, "()")
  typesig(:lazy, "()")
  typesig(:to_set, "(klass : ?XXXX, args : *XXXX) { BLOCK }")
end
