class Integer < Numeric
  rdl_nowrap

  type :ceil, '() -> Integer'
  type :chr, '(Encoding) -> String'
  type :denominator, '() -> Fixnum'
  post(:denominator) { |x| x == 1 }
  type :downto, '(Integer) { (Integer) -> %any } -> Integer'
  type :downto, '(Integer limit) -> Enumerator<Integer>'
  type :even?, '() -> %bool'
  type :gcd, '(Integer) -> Integer'
  type :gcdlcm, '(Integer) -> [Integer, Integer]'
  type :floor, '() -> Integer'
  type :integer?, '() -> TrueClass'
  type :lcm, '(Integer) -> Integer'
  type :next, '() -> Integer'
  type :numerator, '() -> Integer'
  type :odd?, '() -> %bool'
  type :ord, '() -> Integer'
  type :pred, '() -> Integer'
  type :rationalize, '(Numeric) -> Rational'
  type :round, '(Numeric) -> Numeric'
  type :succ, '() -> Integer'
  type :times, '() { (Integer) -> %any } -> Integer'
  type :times, '() -> Enumerator<Integer>'
  type :to_i, '() -> Integer'
  type :to_int, '() -> Integer'
  type :to_r, '() -> Rational'
  type :truncate, '() -> Integer'
  type :upto, '(Integer) { (Integer) -> %any } -> Integer'
  type :upto, '(Integer) -> Enumerator<Integer>'
end
