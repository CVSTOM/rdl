class Time
  type 'self.at', '(Time) -> Time'
  type 'self.at', '(seconds_with_frac: Numeric) -> Time'
  type 'self.at', '(seconds: Numeric, microseconds_with_frac: Numeric) -> Time'
  type 'self.gm', '(year: Fixnum, month: ?(Fixnum or String), day: ?Fixnum, hour: ?Fixnum, min: ?Fixnum, sec: ?Numeric, usec_with_frac: ?Numeric) -> Time'
  type 'self.local', '(year: Fixnum, month: ?(Fixnum or String), day: ?Fixnum, hour: ?Fixnum, min: ?Fixnum, sec: ?Numeric, usec_with_frac: ?Numeric) -> Time'
  rdl_alias 'self.mktime', 'self.local'
  type 'self.new', '(year: ?Fixnum, month: ?(Fixnum or String), day: ?Fixnum, hour: ?Fixnum, min: ?Fixnum, sec: ?Numeric, usec_with_frac: ?Numeric) -> Time'
  type 'self.now', '() -> Time'
  type 'self.utc', '(year: Fixnum, month: ?(Fixnum or String), day: ?Fixnum, hour: ?Fixnum, min: ?Fixnum, sec: ?Numeric, usec_with_frac: ?Numeric) -> Time'

  type :+, '(Numeric) -> Time'
  type :-, '(Time) -> Float'
  type :-, '(Numeric) -> Time'
  type :<=>, '(other: Time) -> -1 or 0 or 1 or nil'
  type :asctime, '() -> String'
  type :ctime, '() -> String'
  type :day, '() -> Fixnum'
  type :dst?, '() -> %bool'
  type :eql?, '(%any) -> %bool'
  type :friday?, '() -> %bool'
  type :getgm, '() -> Time'
  type :getlocal, '(utc_offset: ?String) -> Time'
  type :getutc, '() -> Time'
  type :gmt?, '() -> %bool'
  type :gmt_offset, '() -> Fixnum'
  type :gmtime, '() -> self'
  rdl_alias :gmtoff, :gmt_offset
  type :hash, '() -> Fixnum'
  type :hour, '() -> Fixnum'
  type :inspect, '() -> String'
  type :isdst, '() -> %bool'
  type :localtime, '(utc_offset: ?String) -> self'
  type :mday, '() -> Fixnum'
  type :min, '() -> Fixnum'
  type :mon, '() -> Fixnum'
  type :monday?, '() -> %bool'
  rdl_alias :month, :mon
  type :nsec, '() -> Fixnum'
  type :round, '(Fixnum) -> Time'
  type :saturday, '() -> %bool'
  type :sec, '() -> Fixnum'
  type :strftime, '(String) -> String'
  type :subsec, '() -> Numeric'
  type :succ, '() -> Time'
  type :sunday?, '() -> %bool'
  type :thursday?, '() -> %bool'
  type :to_a, '() -> [Fixnum, Fixnum, Fixnum, Fixnum, Fixnum, Fixnum, Fixnum, Fixnum, %bool, String]'
  type :to_f, '() -> Float'
  type :to_i, '() -> Numeric'
  type :to_r, '() -> Rational'
  type :to_s, '() -> String'
  type :tuesday?, '() -> %bool'
  type :tv_nsec, '() -> Numeric'
  type :tv_sec, '() -> Numeric'
  type :tv_usec, '() -> Numeric'
  type :usec, '() -> Numeric'
  type :utc, '() -> self'
  type :utc?, '() -> %bool'
  type :utc_offset, '() -> Fixnum'
  type :wday, '() -> Fixnum'
  type :wednesday?, '() -> %bool'
  type :yday, '() -> Fixnum'
  type :year, '() -> Fixnum'
  type :zone, '() -> String'
end