#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


module RDL::Type

class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 165)

def initialize()
  @yydebug = true
end

...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    39,    69,    21,    42,    19,    20,   102,    22,    30,    33,
    14,    16,     7,   104,    11,   106,    17,    32,    18,   107,
    29,    34,    13,    32,    35,   110,    40,    40,    21,     7,
    19,    20,   113,    22,    30,    33,    14,    16,     5,     6,
    11,   115,    17,   116,    18,    78,    29,    34,    13,    32,
    35,    46,     7,    44,    45,   117,     8,    46,    42,    44,
    45,    47,     7,     7,    42,    37,    57,    47,    21,    84,
    19,    20,    49,    22,    85,    15,    14,    16,    49,    58,
    11,    59,    17,    60,    18,    61,    63,    21,    13,    19,
    20,    66,    22,    63,    15,    14,    16,    21,    70,    19,
    20,    17,    22,    18,    15,    14,    16,    13,    71,    11,
    72,    17,    73,    18,    74,    76,    21,    13,    19,    20,
    77,    22,    78,    15,    14,    16,    79,    80,    11,    81,
    17,    82,    18,    88,    93,    21,    13,    19,    20,    97,
    22,     7,    15,    14,    16,   nil,   nil,    11,   nil,    17,
   nil,    18,   nil,   nil,    21,    13,    19,    20,   nil,    22,
   nil,    15,    14,    16,   nil,   nil,    11,   nil,    17,   nil,
    18,   nil,   nil,    21,    13,    19,    20,   nil,    22,   nil,
    15,    14,    16,   nil,   nil,    11,   nil,    17,   nil,    18,
   nil,   nil,    91,    13,    21,   nil,    19,    20,   nil,    22,
   nil,    15,    14,    16,   nil,   nil,    11,   nil,    17,   nil,
    18,   nil,   nil,    21,    13,    19,    20,   nil,    22,   nil,
    15,    14,    16,    21,   nil,    19,    20,    17,    22,    18,
    15,    14,    16,    13,   nil,   nil,   nil,    17,   nil,    18,
   nil,   nil,    21,    13,    19,    20,   nil,    22,   nil,    15,
    14,    16,    21,   nil,    19,    20,    17,    22,    18,    52,
    14,    16,    13,   nil,    11,   nil,    17,   nil,    18,    56,
   nil,    21,    13,    19,    20,   nil,    22,   nil,    15,    14,
    16,    21,   nil,    19,    20,    17,    22,    18,    15,    14,
    16,    13,   nil,   nil,   nil,    17,   nil,    18,   nil,   nil,
    21,    13,    19,    20,   nil,    22,   nil,    15,    14,    16,
   nil,   nil,    11,   nil,    17,   nil,    18,   nil,   nil,    21,
    13,    19,    20,   nil,    22,   nil,    15,    14,    16,   nil,
   nil,    11,   nil,    17,   nil,    18,   nil,   nil,    21,    13,
    19,    20,   nil,    22,   nil,    15,    14,    16,   nil,   nil,
    11,   nil,    17,   nil,    18,   nil,   109,    21,    13,    19,
    20,   nil,    22,   nil,    15,    14,    16,   nil,   nil,    11,
   nil,    17,   nil,    18,   nil,   nil,    21,    13,    19,    20,
   nil,    22,   nil,    15,    14,    16,   nil,   nil,   nil,   nil,
    17,   nil,    18 ]

racc_action_check = [
    12,    41,    59,    61,    59,    59,    83,    59,    59,    59,
    59,    59,    84,    85,    59,    97,    59,    61,    59,   100,
    59,    59,    59,    59,    59,   103,    12,    41,     7,   104,
     7,     7,   107,     7,     7,     7,     7,     7,     0,     0,
     7,   108,     7,   111,     7,   113,     7,     7,     7,     7,
     7,    17,     0,    17,    17,   115,     1,    74,    17,    74,
    74,    17,     6,    17,    74,     8,    21,    74,    11,    58,
    11,    11,    17,    11,    58,    11,    11,    11,    74,    24,
    11,    27,    11,    28,    11,    31,    33,    73,    11,    73,
    73,    38,    73,    42,    73,    73,    73,    79,    44,    79,
    79,    73,    79,    73,    79,    79,    79,    73,    45,    79,
    46,    79,    47,    79,    48,    50,    49,    79,    49,    49,
    51,    49,    52,    49,    49,    49,    53,    54,    49,    55,
    49,    57,    49,    60,    68,    91,    49,    91,    91,    72,
    91,    78,    91,    91,    91,   nil,   nil,    91,   nil,    91,
   nil,    91,   nil,   nil,    32,    91,    32,    32,   nil,    32,
   nil,    32,    32,    32,   nil,   nil,    32,   nil,    32,   nil,
    32,   nil,   nil,    63,    32,    63,    63,   nil,    63,   nil,
    63,    63,    63,   nil,   nil,    63,   nil,    63,   nil,    63,
   nil,   nil,    63,    63,     5,   nil,     5,     5,   nil,     5,
   nil,     5,     5,     5,   nil,   nil,     5,   nil,     5,   nil,
     5,   nil,   nil,    69,     5,    69,    69,   nil,    69,   nil,
    69,    69,    69,    70,   nil,    70,    70,    69,    70,    69,
    70,    70,    70,    69,   nil,   nil,   nil,    70,   nil,    70,
   nil,   nil,    71,    70,    71,    71,   nil,    71,   nil,    71,
    71,    71,    18,   nil,    18,    18,    71,    18,    71,    18,
    18,    18,    71,   nil,    18,   nil,    18,   nil,    18,    18,
   nil,   106,    18,   106,   106,   nil,   106,   nil,   106,   106,
   106,    39,   nil,    39,    39,   106,    39,   106,    39,    39,
    39,   106,   nil,   nil,   nil,    39,   nil,    39,   nil,   nil,
    40,    39,    40,    40,   nil,    40,   nil,    40,    40,    40,
   nil,   nil,    40,   nil,    40,   nil,    40,   nil,   nil,    34,
    40,    34,    34,   nil,    34,   nil,    34,    34,    34,   nil,
   nil,    34,   nil,    34,   nil,    34,   nil,   nil,   102,    34,
   102,   102,   nil,   102,   nil,   102,   102,   102,   nil,   nil,
   102,   nil,   102,   nil,   102,   nil,   102,    35,   102,    35,
    35,   nil,    35,   nil,    35,    35,    35,   nil,   nil,    35,
   nil,    35,   nil,    35,   nil,   nil,    13,    35,    13,    13,
   nil,    13,   nil,    13,    13,    13,   nil,   nil,   nil,   nil,
    13,   nil,    13 ]

racc_action_pointer = [
    33,    56,   nil,   nil,   nil,   187,    43,    21,    65,   nil,
   nil,    61,    -4,   369,   nil,   nil,   nil,    44,   245,   nil,
   nil,    52,   nil,   nil,    59,   nil,   nil,    79,    69,   nil,
   nil,    83,   147,    75,   312,   350,   nil,   nil,    71,   274,
   293,    -3,    82,   nil,    90,   100,    96,   104,   112,   109,
    93,    98,   111,   124,   103,   105,   nil,   109,    48,    -5,
   115,   -11,   nil,   166,   nil,   nil,   nil,   nil,   103,   206,
   216,   235,   117,    80,    50,   nil,   nil,   nil,   122,    90,
   nil,   nil,   nil,     3,    -7,    -8,   nil,   nil,   nil,   nil,
   nil,   128,   nil,   nil,   nil,   nil,   nil,     7,   nil,   nil,
    17,   nil,   331,     3,    10,   nil,   264,    18,    27,   nil,
   nil,    21,   nil,    34,   nil,    37,   nil,   nil ]

racc_action_default = [
   -65,   -65,    -1,    -2,    -3,   -65,   -65,   -12,   -65,    -4,
   -35,   -65,   -48,   -65,   -52,   -53,   -54,   -39,   -65,   -61,
   -62,   -65,   -64,    -5,   -65,   -13,   -14,   -15,   -18,   -21,
   -22,   -23,   -65,   -53,   -65,   -65,   -29,   118,   -65,   -65,
   -65,   -50,   -65,   -40,   -65,   -65,   -65,   -65,   -45,   -65,
   -65,   -65,   -53,   -37,   -65,   -65,   -59,   -65,   -32,   -65,
   -20,   -65,   -24,   -65,   -27,   -28,   -36,   -49,   -65,   -65,
   -65,   -65,   -65,   -65,   -39,   -46,   -56,   -60,   -65,   -65,
   -57,   -58,   -63,   -65,   -65,   -65,   -16,   -17,   -19,   -25,
   -26,   -65,   -31,   -55,   -51,   -41,   -42,   -65,   -44,   -47,
   -10,   -38,   -65,   -65,   -65,   -30,   -65,   -65,    -6,    -9,
   -33,   -65,   -43,   -65,   -11,    -7,   -34,    -8 ]

racc_goto_table = [
     2,     9,    55,    36,    67,    54,    23,    38,    51,    26,
    43,    41,    25,     3,     4,    24,    83,    50,    90,     1,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    68,    62,   nil,
    64,    65,   nil,   nil,    94,    95,    96,   nil,    98,   nil,
   nil,   nil,   nil,   nil,   nil,    75,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    36,   nil,   nil,   nil,    92,
   nil,    87,   nil,    89,    86,    99,   101,    43,   nil,   nil,
   nil,   112,   nil,   nil,   nil,   nil,   nil,   nil,   100,   nil,
   nil,   nil,   nil,   nil,   103,   nil,   nil,   105,   nil,   nil,
   nil,   114,   nil,   nil,   nil,   nil,   nil,   nil,   108,   nil,
   nil,   nil,   nil,   nil,   111 ]

racc_goto_check = [
     2,     5,     8,     5,    15,    16,     2,     5,    18,    10,
    13,    19,     9,     3,     4,     6,     7,     2,    14,     1,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,     5,   nil,
     5,     5,   nil,   nil,    15,    15,    15,   nil,    15,   nil,
   nil,   nil,   nil,   nil,   nil,     5,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     5,   nil,   nil,   nil,     5,
   nil,    10,   nil,    10,     9,    18,    16,    13,   nil,   nil,
   nil,    15,   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,
   nil,   nil,   nil,   nil,     2,   nil,   nil,     5,   nil,   nil,
   nil,     8,   nil,   nil,   nil,   nil,   nil,   nil,     5,   nil,
   nil,   nil,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,    19,     0,    13,    14,    -4,     8,   -42,   -16,     5,
     2,   nil,   nil,    -7,   -45,   -35,   -13,   nil,    -9,    -2 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,    53,   nil,   nil,   nil,   nil,
   nil,    27,    28,    31,   nil,    10,   nil,    48,   nil,    12 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 34, :_reduce_1,
  1, 34, :_reduce_2,
  1, 34, :_reduce_3,
  2, 36, :_reduce_4,
  2, 37, :_reduce_5,
  6, 35, :_reduce_6,
  7, 35, :_reduce_7,
  8, 35, :_reduce_8,
  6, 35, :_reduce_9,
  3, 41, :_reduce_10,
  5, 41, :_reduce_11,
  0, 39, :_reduce_12,
  1, 39, :_reduce_13,
  1, 39, :_reduce_14,
  1, 42, :_reduce_15,
  3, 42, :_reduce_16,
  3, 42, :_reduce_17,
  1, 44, :_reduce_18,
  3, 44, :_reduce_19,
  2, 44, :_reduce_20,
  1, 44, :_reduce_21,
  1, 44, :_reduce_22,
  1, 43, :_reduce_23,
  2, 43, :_reduce_24,
  3, 43, :_reduce_25,
  3, 46, :_reduce_26,
  2, 45, :_reduce_27,
  2, 45, :_reduce_28,
  1, 45, :_reduce_29,
  2, 47, :_reduce_30,
  1, 47, :_reduce_31,
  0, 40, :_reduce_32,
  3, 40, :_reduce_33,
  4, 40, :_reduce_34,
  1, 38, :_reduce_35,
  3, 38, :_reduce_36,
  1, 49, :_reduce_37,
  3, 49, :_reduce_38,
  0, 50, :_reduce_none,
  1, 50, :_reduce_40,
  3, 50, :_reduce_41,
  3, 50, :_reduce_42,
  5, 50, :_reduce_43,
  3, 50, :_reduce_44,
  1, 51, :_reduce_45,
  2, 51, :_reduce_46,
  3, 51, :_reduce_47,
  1, 48, :_reduce_48,
  3, 48, :_reduce_49,
  2, 48, :_reduce_50,
  4, 48, :_reduce_51,
  1, 52, :_reduce_52,
  1, 52, :_reduce_53,
  1, 52, :_reduce_54,
  4, 52, :_reduce_55,
  3, 52, :_reduce_56,
  3, 52, :_reduce_57,
  3, 52, :_reduce_58,
  2, 52, :_reduce_59,
  3, 52, :_reduce_60,
  1, 52, :_reduce_61,
  1, 52, :_reduce_62,
  3, 52, :_reduce_63,
  1, 52, :_reduce_64 ]

racc_reduce_n = 65

racc_shift_n = 118

racc_token_table = {
  false => 0,
  :error => 1,
  :COMMA => 2,
  :RARROW => 3,
  :OR => 4,
  :HASH_TYPE => 5,
  :HASH_QUERY => 6,
  :CONST_BEGIN => 7,
  :RASSOC => 8,
  :FIXNUM => 9,
  :FLOAT => 10,
  :COLON => 11,
  :DOT => 12,
  :DOTS => 13,
  :ID => 14,
  :SYMBOL => 15,
  :SPECIAL_ID => 16,
  :STRING => 17,
  :PREDICATE => 18,
  :LPAREN => 19,
  :RPAREN => 20,
  :LBRACE => 21,
  :RBRACE => 22,
  :LBRACKET => 23,
  :RBRACKET => 24,
  :COMP => 25,
  :QUERY => 26,
  :BANG => 27,
  :STARSTAR => 28,
  :STAR => 29,
  :LESS => 30,
  :GREATER => 31,
  :EOF => 32 }

racc_nt_base = 33

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "COMMA",
  "RARROW",
  "OR",
  "HASH_TYPE",
  "HASH_QUERY",
  "CONST_BEGIN",
  "RASSOC",
  "FIXNUM",
  "FLOAT",
  "COLON",
  "DOT",
  "DOTS",
  "ID",
  "SYMBOL",
  "SPECIAL_ID",
  "STRING",
  "PREDICATE",
  "LPAREN",
  "RPAREN",
  "LBRACE",
  "RBRACE",
  "LBRACKET",
  "RBRACKET",
  "COMP",
  "QUERY",
  "BANG",
  "STARSTAR",
  "STAR",
  "LESS",
  "GREATER",
  "EOF",
  "$start",
  "entry",
  "method_type",
  "bare_type",
  "query_type",
  "type_expr",
  "arg_list",
  "block",
  "method_sig_list",
  "nonempty_arg_list",
  "named_arg_list",
  "arg",
  "base_arg",
  "named_arg",
  "base_arg_query_only",
  "union_type",
  "type_expr_comma_list",
  "hash_expr",
  "hash_expr_comma_list",
  "single_type" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_1(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 19)
  def _reduce_2(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 20)
  def _reduce_3(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 23)
  def _reduce_4(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 26)
  def _reduce_5(val, _values, result)
     result = RDL::Type::MethodType.new val[1].args, val[1].block, val[1].ret 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 30)
  def _reduce_6(val, _values, result)
            result = RDL::Type::MethodType.new val[1], val[3], val[5]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 33)
  def _reduce_7(val, _values, result)
            result = RDL::Type::MethodType.new val[1], val[3], RDL::Type::AnnotatedArgType.new(val[6], val[5])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 36)
  def _reduce_8(val, _values, result)
            result = RDL::Type::MethodType.new val[1], val[3], RDL::Type::DependentArgType.new(val[6], val[5], val[7])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 39)
  def _reduce_9(val, _values, result)
         	result = RDL::Type::MethodType.new(val[1], val[3], RDL::Type::ComputedType.new(val[5]))
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 43)
  def _reduce_10(val, _values, result)
     result = [val[0].to_sym, val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 44)
  def _reduce_11(val, _values, result)
     result = [val[0].to_sym, val[2]] + val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 47)
  def _reduce_12(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 48)
  def _reduce_13(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 50)
  def _reduce_14(val, _values, result)
          result = [RDL::Type::FiniteHashType.new(Hash[*val[0][0]], val[0][1])]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 53)
  def _reduce_15(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 54)
  def _reduce_16(val, _values, result)
     result = val[2].unshift val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 55)
  def _reduce_17(val, _values, result)
     # named arg list must come last
      result = [val[0], RDL::Type::FiniteHashType.new(Hash[*val[2][0]], val[2][1])]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 59)
  def _reduce_18(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 60)
  def _reduce_19(val, _values, result)
     result = RDL::Type::DependentArgType.new(val[1], val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 61)
  def _reduce_20(val, _values, result)
     result = RDL::Type::AnnotatedArgType.new(val[1], val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 62)
  def _reduce_21(val, _values, result)
     result = RDL::Type::ComputedType.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 63)
  def _reduce_22(val, _values, result)
     result = RDL::Type::DotsQuery.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 65)
  def _reduce_23(val, _values, result)
     result = [val[0], nil] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 66)
  def _reduce_24(val, _values, result)
     result = [[], val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 67)
  def _reduce_25(val, _values, result)
     result = [val[0] + val[2][0], val[2][1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 69)
  def _reduce_26(val, _values, result)
     result = [val[0].to_sym, val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 72)
  def _reduce_27(val, _values, result)
     result = RDL::Type::OptionalType.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 73)
  def _reduce_28(val, _values, result)
     result = RDL::Type::VarargType.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 74)
  def _reduce_29(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 76)
  def _reduce_30(val, _values, result)
     result = RDL::Type::OptionalType.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 77)
  def _reduce_31(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 80)
  def _reduce_32(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 81)
  def _reduce_33(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 82)
  def _reduce_34(val, _values, result)
     result = RDL::Type::OptionalType.new val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 85)
  def _reduce_35(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 86)
  def _reduce_36(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 89)
  def _reduce_37(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 90)
  def _reduce_38(val, _values, result)
     result = [val[0]] + val[2] 
    result
  end
.,.,

# reduce 39 omitted

module_eval(<<'.,.,', 'parser.racc', 93)
  def _reduce_40(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 94)
  def _reduce_41(val, _values, result)
     result = [val[0].to_i, val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 95)
  def _reduce_42(val, _values, result)
     result = [val[0].to_f, val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 97)
  def _reduce_43(val, _values, result)
        result = [Kernel.const_get(val[0]), val[2]]
  
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 99)
  def _reduce_44(val, _values, result)
     result = [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 102)
  def _reduce_45(val, _values, result)
     result = [val[0], nil] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_46(val, _values, result)
     result = [[], val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 104)
  def _reduce_47(val, _values, result)
     result = [val[0] + val[2][0], val[2][1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 107)
  def _reduce_48(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 108)
  def _reduce_49(val, _values, result)
     result = RDL::Type::UnionType.new val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 109)
  def _reduce_50(val, _values, result)
     result = RDL::Type::NonNullType.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 110)
  def _reduce_51(val, _values, result)
     result = RDL::Type::UnionType.new(RDL::Type::NonNullType.new(val[1]), val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 113)
  def _reduce_52(val, _values, result)
     result = RDL::Type::SingletonType.new(val[0].to_sym) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 115)
  def _reduce_53(val, _values, result)
          if val[0] == 'nil' then
        result = RDL::Globals.types[:nil]
      elsif val[0] == 'true' then
        result = RDL::Globals.types[:true]
      elsif val[0] == 'false'
        result = RDL::Globals.types[:false]
      elsif val[0] =~ /^[a-z_]+\w*\'?/ then
        result = RDL::Type::VarType.new(val[0].to_sym)
      else
        result = RDL::Type::NominalType.new val[0]
      end
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 128)
  def _reduce_54(val, _values, result)
          if RDL::Globals.special_types.has_key? val[0] then
        result = RDL::Globals.special_types[val[0]]
      else
        fail "Unexpected special type identifier #{val[0]}"
      end
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 135)
  def _reduce_55(val, _values, result)
          result = RDL::Type::GenericType.new(val[0], *val[2])
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 137)
  def _reduce_56(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 139)
  def _reduce_57(val, _values, result)
          result = RDL::Type::TupleType.new(*val[1])
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 142)
  def _reduce_58(val, _values, result)
          result = RDL::Type::StructuralType.new(Hash[*val[1]])
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 145)
  def _reduce_59(val, _values, result)
          result = RDL::Type::TupleType.new
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 148)
  def _reduce_60(val, _values, result)
          result = RDL::Type::FiniteHashType.new(Hash[*val[1][0]], val[1][1])
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 150)
  def _reduce_61(val, _values, result)
     result = RDL::Type::SingletonType.new(val[0].to_i) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 151)
  def _reduce_62(val, _values, result)
     result = RDL::Type::SingletonType.new(val[0].to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 153)
  def _reduce_63(val, _values, result)
          result =  RDL::Type::SingletonType.new(Kernel.const_get(val[1]))
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 157)
  def _reduce_64(val, _values, result)
     result = RDL::Type::WildQuery.new 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser


end
