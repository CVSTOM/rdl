#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


module RDL::Type

class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 160)

def initialize()
  @yydebug = true
end

...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    21,    83,    19,    20,    40,    22,    29,    31,    14,    16,
    89,    92,    11,     7,    17,    73,    18,    59,    32,    13,
    33,    21,    97,    19,    20,     7,    22,    29,    31,    14,
    16,    99,    39,    11,    39,    17,   101,    18,   102,    32,
    13,    33,    21,   104,    19,    20,     7,    22,    79,    15,
    14,    16,    80,   107,    11,   109,    17,    21,    18,    19,
    20,    13,    22,   110,    15,    14,    16,    73,     5,     6,
   111,    17,    21,    18,    19,    20,    13,    22,     8,    15,
    14,    16,     7,     7,    35,    37,    17,    21,    18,    19,
    20,    13,    22,    39,    15,    14,    16,    54,    55,    56,
    57,    17,    21,    18,    19,    20,    13,    22,    58,    15,
    14,    16,    62,    64,    59,    66,    17,    21,    18,    19,
    20,    13,    22,    67,    15,    14,    16,    68,    69,    11,
    70,    17,    21,    18,    19,    20,    13,    22,    71,    15,
    14,    16,    72,    74,    11,    75,    17,    21,    18,    19,
    20,    13,    22,    76,    15,    14,    16,    77,   nil,    11,
   nil,    17,    21,    18,    19,    20,    13,    22,   nil,    49,
    14,    16,   nil,   nil,    11,   nil,    17,   nil,    18,    53,
    21,    13,    19,    20,   nil,    22,   nil,    15,    14,    16,
   nil,   nil,    11,   nil,    17,   nil,    18,   nil,    86,    13,
    21,   nil,    19,    20,   nil,    22,   nil,    15,    14,    16,
   nil,   nil,    11,   nil,    17,    21,    18,    19,    20,    13,
    22,   nil,    15,    14,    16,   nil,   nil,   nil,   nil,    17,
    21,    18,    19,    20,    13,    22,   nil,    15,    14,    16,
   nil,   nil,    11,   nil,    17,    21,    18,    19,    20,    13,
    22,   nil,    15,    14,    16,   nil,   nil,    11,   nil,    17,
    21,    18,    19,    20,    13,    22,   nil,    15,    14,    16,
   nil,   nil,    11,   nil,    17,    21,    18,    19,    20,    13,
    22,   nil,    15,    14,    16,   nil,   nil,   nil,   nil,    17,
    21,    18,    19,    20,    13,    22,   nil,    15,    14,    16,
    44,   nil,    42,    43,    17,   nil,    18,    40,   nil,   nil,
    45,    44,     7,    42,    43,   nil,   nil,   nil,    40,   nil,
   nil,    45 ]

racc_action_check = [
    56,    57,    56,    56,    58,    56,    56,    56,    56,    56,
    65,    68,    56,    73,    56,    49,    56,    31,    56,    56,
    56,     7,    78,     7,     7,    79,     7,     7,     7,     7,
     7,    80,    49,     7,    31,     7,    92,     7,    95,     7,
     7,     7,     5,    98,     5,     5,    99,     5,    55,     5,
     5,     5,    55,   102,     5,   103,     5,    66,     5,    66,
    66,     5,    66,   105,    66,    66,    66,   107,     0,     0,
   109,    66,    67,    66,    67,    67,    66,    67,     1,    67,
    67,    67,     0,     6,     8,    12,    67,    64,    67,    64,
    64,    67,    64,    15,    64,    64,    64,    21,    24,    27,
    28,    64,    69,    64,    69,    69,    64,    69,    30,    69,
    69,    69,    36,    38,    40,    42,    69,    32,    69,    32,
    32,    69,    32,    43,    32,    32,    32,    44,    45,    32,
    46,    32,    74,    32,    74,    74,    32,    74,    47,    74,
    74,    74,    48,    50,    74,    51,    74,    33,    74,    33,
    33,    74,    33,    52,    33,    33,    33,    54,   nil,    33,
   nil,    33,    18,    33,    18,    18,    33,    18,   nil,    18,
    18,    18,   nil,   nil,    18,   nil,    18,   nil,    18,    18,
    59,    18,    59,    59,   nil,    59,   nil,    59,    59,    59,
   nil,   nil,    59,   nil,    59,   nil,    59,   nil,    59,    59,
    86,   nil,    86,    86,   nil,    86,   nil,    86,    86,    86,
   nil,   nil,    86,   nil,    86,    37,    86,    37,    37,    86,
    37,   nil,    37,    37,    37,   nil,   nil,   nil,   nil,    37,
    11,    37,    11,    11,    37,    11,   nil,    11,    11,    11,
   nil,   nil,    11,   nil,    11,    97,    11,    97,    97,    11,
    97,   nil,    97,    97,    97,   nil,   nil,    97,   nil,    97,
    39,    97,    39,    39,    97,    39,   nil,    39,    39,    39,
   nil,   nil,    39,   nil,    39,   101,    39,   101,   101,    39,
   101,   nil,   101,   101,   101,   nil,   nil,   nil,   nil,   101,
    13,   101,    13,    13,   101,    13,   nil,    13,    13,    13,
    17,   nil,    17,    17,    13,   nil,    13,    17,   nil,   nil,
    17,    70,    17,    70,    70,   nil,   nil,   nil,    70,   nil,
   nil,    70 ]

racc_action_pointer = [
    63,    78,   nil,   nil,   nil,    35,    64,    14,    84,   nil,
   nil,   223,    81,   283,   nil,    65,   nil,   293,   155,   nil,
   nil,    83,   nil,   nil,    78,   nil,   nil,    97,    86,   nil,
   106,     6,   110,   140,   nil,   nil,    92,   208,   109,   253,
   103,   nil,   107,   115,   113,   120,   128,   116,   120,     4,
   141,   121,   129,   nil,   135,    27,    -7,   -17,   -10,   173,
   nil,   nil,   nil,   nil,    80,   -19,    50,    65,   -11,    95,
   304,   nil,   nil,    -6,   125,   nil,   nil,   nil,    19,     6,
    10,   nil,   nil,   nil,   nil,   nil,   193,   nil,   nil,   nil,
   nil,   nil,    28,   nil,   nil,    36,   nil,   238,    21,    27,
   nil,   268,    39,    41,   nil,    41,   nil,    56,   nil,    52,
   nil,   nil ]

racc_action_default = [
   -61,   -61,    -1,    -2,    -3,   -61,   -61,   -11,   -61,    -4,
   -32,   -61,   -44,   -61,   -48,   -49,   -50,   -36,   -61,   -57,
   -58,   -61,   -60,    -5,   -61,   -12,   -13,   -14,   -17,   -20,
   -21,   -49,   -61,   -61,   -26,   112,   -61,   -61,   -46,   -61,
   -61,   -37,   -61,   -61,   -61,   -61,   -42,   -61,   -61,   -49,
   -34,   -61,   -61,   -55,   -61,   -29,   -61,   -19,   -61,   -61,
   -24,   -25,   -33,   -45,   -61,   -61,   -61,   -61,   -61,   -61,
   -36,   -52,   -56,   -61,   -61,   -53,   -54,   -59,   -61,   -61,
   -61,   -15,   -16,   -18,   -22,   -23,   -61,   -28,   -47,   -51,
   -38,   -39,   -61,   -41,   -43,    -9,   -35,   -61,   -61,   -61,
   -27,   -61,   -61,    -6,   -30,   -61,   -40,   -61,   -10,    -7,
   -31,    -8 ]

racc_goto_table = [
     2,     9,    52,    34,    63,    51,    23,    36,    26,    48,
    41,    25,    38,     3,     4,    24,    78,    47,    85,     1,
   nil,   nil,   nil,   nil,   nil,   nil,    65,   nil,    60,    61,
   nil,    88,   nil,    90,    91,   nil,    93,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    34,   nil,   nil,    87,   nil,    82,   nil,    84,
    81,    96,    94,    41,   nil,   nil,   nil,   nil,   106,   nil,
   nil,   nil,   nil,    95,   nil,   nil,   nil,   nil,   nil,    98,
   nil,   nil,   100,   nil,   nil,   nil,   108,   nil,   nil,   nil,
   nil,   nil,   nil,   103,   nil,   nil,   nil,   nil,   nil,   105 ]

racc_goto_check = [
     2,     5,     8,     5,    15,    16,     2,     5,    10,    18,
    13,     9,    19,     3,     4,     6,     7,     2,    14,     1,
   nil,   nil,   nil,   nil,   nil,   nil,    16,   nil,     5,     5,
   nil,    15,   nil,    15,    15,   nil,    15,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     5,   nil,   nil,     5,   nil,    10,   nil,    10,
     9,    16,    18,    13,   nil,   nil,   nil,   nil,    15,   nil,
   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,   nil,     2,
   nil,   nil,     5,   nil,   nil,   nil,     8,   nil,   nil,   nil,
   nil,   nil,   nil,     5,   nil,   nil,   nil,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,    19,     0,    13,    14,    -4,     8,   -39,   -16,     4,
     1,   nil,   nil,    -7,   -41,   -33,   -13,   nil,    -8,    -1 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,    50,   nil,   nil,   nil,   nil,
   nil,    27,    28,    30,   nil,    10,   nil,    46,   nil,    12 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 32, :_reduce_1,
  1, 32, :_reduce_2,
  1, 32, :_reduce_3,
  2, 34, :_reduce_4,
  2, 35, :_reduce_5,
  6, 33, :_reduce_6,
  7, 33, :_reduce_7,
  8, 33, :_reduce_8,
  3, 39, :_reduce_9,
  5, 39, :_reduce_10,
  0, 37, :_reduce_11,
  1, 37, :_reduce_12,
  1, 37, :_reduce_13,
  1, 40, :_reduce_14,
  3, 40, :_reduce_15,
  3, 40, :_reduce_16,
  1, 42, :_reduce_17,
  3, 42, :_reduce_18,
  2, 42, :_reduce_19,
  1, 42, :_reduce_20,
  1, 41, :_reduce_21,
  3, 41, :_reduce_22,
  3, 44, :_reduce_23,
  2, 43, :_reduce_24,
  2, 43, :_reduce_25,
  1, 43, :_reduce_26,
  2, 45, :_reduce_27,
  1, 45, :_reduce_28,
  0, 38, :_reduce_29,
  3, 38, :_reduce_30,
  4, 38, :_reduce_31,
  1, 36, :_reduce_32,
  3, 36, :_reduce_33,
  1, 47, :_reduce_34,
  3, 47, :_reduce_35,
  0, 48, :_reduce_none,
  1, 48, :_reduce_37,
  3, 48, :_reduce_38,
  3, 48, :_reduce_39,
  5, 48, :_reduce_40,
  3, 48, :_reduce_41,
  1, 49, :_reduce_42,
  3, 49, :_reduce_43,
  1, 46, :_reduce_44,
  3, 46, :_reduce_45,
  2, 46, :_reduce_46,
  4, 46, :_reduce_47,
  1, 50, :_reduce_48,
  1, 50, :_reduce_49,
  1, 50, :_reduce_50,
  4, 50, :_reduce_51,
  3, 50, :_reduce_52,
  3, 50, :_reduce_53,
  3, 50, :_reduce_54,
  2, 50, :_reduce_55,
  3, 50, :_reduce_56,
  1, 50, :_reduce_57,
  1, 50, :_reduce_58,
  3, 50, :_reduce_59,
  1, 50, :_reduce_60 ]

racc_reduce_n = 61

racc_shift_n = 112

racc_token_table = {
  false => 0,
  :error => 1,
  :COMMA => 2,
  :RARROW => 3,
  :OR => 4,
  :HASH_TYPE => 5,
  :HASH_QUERY => 6,
  :CONST_BEGIN => 7,
  :RASSOC => 8,
  :FIXNUM => 9,
  :FLOAT => 10,
  :COLON => 11,
  :DOT => 12,
  :DOTS => 13,
  :ID => 14,
  :SYMBOL => 15,
  :SPECIAL_ID => 16,
  :STRING => 17,
  :PREDICATE => 18,
  :LPAREN => 19,
  :RPAREN => 20,
  :LBRACE => 21,
  :RBRACE => 22,
  :LBRACKET => 23,
  :RBRACKET => 24,
  :QUERY => 25,
  :BANG => 26,
  :STAR => 27,
  :LESS => 28,
  :GREATER => 29,
  :EOF => 30 }

racc_nt_base = 31

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "COMMA",
  "RARROW",
  "OR",
  "HASH_TYPE",
  "HASH_QUERY",
  "CONST_BEGIN",
  "RASSOC",
  "FIXNUM",
  "FLOAT",
  "COLON",
  "DOT",
  "DOTS",
  "ID",
  "SYMBOL",
  "SPECIAL_ID",
  "STRING",
  "PREDICATE",
  "LPAREN",
  "RPAREN",
  "LBRACE",
  "RBRACE",
  "LBRACKET",
  "RBRACKET",
  "QUERY",
  "BANG",
  "STAR",
  "LESS",
  "GREATER",
  "EOF",
  "$start",
  "entry",
  "method_type",
  "bare_type",
  "query_type",
  "type_expr",
  "arg_list",
  "block",
  "method_sig_list",
  "nonempty_arg_list",
  "named_arg_list",
  "arg",
  "base_arg",
  "named_arg",
  "base_arg_query_only",
  "union_type",
  "type_expr_comma_list",
  "hash_expr",
  "hash_expr_comma_list",
  "single_type" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_1(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 19)
  def _reduce_2(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 20)
  def _reduce_3(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 23)
  def _reduce_4(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 26)
  def _reduce_5(val, _values, result)
     result = RDL::Type::MethodType.new val[1].args, val[1].block, val[1].ret 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 30)
  def _reduce_6(val, _values, result)
            result = RDL::Type::MethodType.new val[1], val[3], val[5]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 33)
  def _reduce_7(val, _values, result)
            result = RDL::Type::MethodType.new val[1], val[3], RDL::Type::AnnotatedArgType.new(val[6], val[5])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 36)
  def _reduce_8(val, _values, result)
            result = RDL::Type::MethodType.new val[1], val[3], RDL::Type::DependentArgType.new(val[6], val[5], val[7])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 40)
  def _reduce_9(val, _values, result)
     result = [val[0].to_sym, val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 41)
  def _reduce_10(val, _values, result)
     result = [val[0].to_sym, val[2]] + val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 44)
  def _reduce_11(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 45)
  def _reduce_12(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 47)
  def _reduce_13(val, _values, result)
          result = [RDL::Type::FiniteHashType.new(Hash[*val[0]])]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 50)
  def _reduce_14(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 51)
  def _reduce_15(val, _values, result)
     result = val[2].unshift val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 52)
  def _reduce_16(val, _values, result)
     # named arg list must come last
      result = [val[0], RDL::Type::FiniteHashType.new(Hash[*val[2]])]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_17(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 57)
  def _reduce_18(val, _values, result)
    result = RDL::Type::DependentArgType.new(val[1], val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 58)
  def _reduce_19(val, _values, result)
     result = RDL::Type::AnnotatedArgType.new(val[1], val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 59)
  def _reduce_20(val, _values, result)
     result = RDL::Type::DotsQuery.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 61)
  def _reduce_21(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 62)
  def _reduce_22(val, _values, result)
     result = val[0] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 64)
  def _reduce_23(val, _values, result)
     result = [val[0].to_sym, val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 67)
  def _reduce_24(val, _values, result)
     result = RDL::Type::OptionalType.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 68)
  def _reduce_25(val, _values, result)
     result = RDL::Type::VarargType.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 69)
  def _reduce_26(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 71)
  def _reduce_27(val, _values, result)
     result = RDL::Type::OptionalType.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 72)
  def _reduce_28(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 75)
  def _reduce_29(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 76)
  def _reduce_30(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 77)
  def _reduce_31(val, _values, result)
     result = RDL::Type::OptionalType.new val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 80)
  def _reduce_32(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 81)
  def _reduce_33(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 84)
  def _reduce_34(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 85)
  def _reduce_35(val, _values, result)
     result = [val[0]] + val[2] 
    result
  end
.,.,

# reduce 36 omitted

module_eval(<<'.,.,', 'parser.racc', 88)
  def _reduce_37(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 89)
  def _reduce_38(val, _values, result)
     result = [val[0].to_i, val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 90)
  def _reduce_39(val, _values, result)
     result = [val[0].to_f, val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 92)
  def _reduce_40(val, _values, result)
        result = [Kernel.const_get(val[0]), val[2]]
  
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 94)
  def _reduce_41(val, _values, result)
     result = [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 97)
  def _reduce_42(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 98)
  def _reduce_43(val, _values, result)
     result = val[0] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 101)
  def _reduce_44(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 102)
  def _reduce_45(val, _values, result)
     result = RDL::Type::UnionType.new val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_46(val, _values, result)
     result = RDL::Type::NonNullType.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 104)
  def _reduce_47(val, _values, result)
     result = RDL::Type::UnionType.new(RDL::Type::NonNullType.new(val[1]), val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 107)
  def _reduce_48(val, _values, result)
     result = RDL::Type::SingletonType.new(val[0].to_sym) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 109)
  def _reduce_49(val, _values, result)
          if val[0] == 'nil' then
        result = $__rdl_nil_type
      elsif val[0] == 'true' then
        result = $__rdl_true_type
      elsif val[0] == 'false'
        result = $__rdl_false_type
      elsif val[0] =~ /^[a-z_]+\w*\'?/ then
        result = RDL::Type::VarType.new(val[0].to_sym)
      else
        result = RDL::Type::NominalType.new val[0]
      end
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 122)
  def _reduce_50(val, _values, result)
          if $__rdl_special_types.has_key? val[0] then
        result = $__rdl_special_types[val[0]]
      else
        fail "Unexpected special type identifier #{val[0]}"
      end
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 129)
  def _reduce_51(val, _values, result)
          n = RDL::Type::NominalType.new(val[0])
      result = RDL::Type::GenericType.new(n, *val[2])
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 132)
  def _reduce_52(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 134)
  def _reduce_53(val, _values, result)
          result = RDL::Type::TupleType.new(*val[1])
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 137)
  def _reduce_54(val, _values, result)
          result = RDL::Type::StructuralType.new(Hash[*val[1]])
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 140)
  def _reduce_55(val, _values, result)
          result = RDL::Type::TupleType.new
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 143)
  def _reduce_56(val, _values, result)
          result = RDL::Type::FiniteHashType.new(Hash[*val[1]])
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 145)
  def _reduce_57(val, _values, result)
     result = RDL::Type::SingletonType.new(val[0].to_i) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 146)
  def _reduce_58(val, _values, result)
     result = RDL::Type::SingletonType.new(val[0].to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 148)
  def _reduce_59(val, _values, result)
          result =  RDL::Type::SingletonType.new(Kernel.const_get(val[1]))
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 152)
  def _reduce_60(val, _values, result)
     result = RDL::Type::WildQuery.new 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser


end
