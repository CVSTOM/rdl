#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


module RDL::Type

class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 159)

def initialize()
  @yydebug = true
end

...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    21,    77,    19,    20,    79,    22,    29,    31,    14,    16,
    82,    40,    11,    88,    17,    59,    18,    73,    32,    13,
    33,    21,    91,    19,    20,     7,    22,    29,    31,    14,
    16,    96,    39,    11,    39,    17,     7,    18,    99,    32,
    13,    33,    21,   100,    19,    20,   102,    22,   104,    15,
    14,    16,   106,     5,     6,    73,    17,    21,    18,    19,
    20,    13,    22,   107,    15,    14,    16,     7,     8,     7,
    35,    17,    21,    18,    19,    20,    13,    22,    37,    15,
    14,    16,    39,    54,    55,    56,    17,    21,    18,    19,
    20,    13,    22,    57,    15,    14,    16,    58,    62,    11,
    64,    17,    21,    18,    19,    20,    13,    22,    59,    15,
    14,    16,    66,    67,    68,    69,    17,    21,    18,    19,
    20,    13,    22,    70,    15,    14,    16,    71,    72,    11,
    74,    17,    21,    18,    19,    20,    13,    22,    75,    15,
    14,    16,    76,   nil,    11,   nil,    17,   nil,    18,   nil,
    85,    13,    21,   nil,    19,    20,   nil,    22,   nil,    15,
    14,    16,   nil,   nil,    11,   nil,    17,    21,    18,    19,
    20,    13,    22,   nil,    15,    14,    16,   nil,   nil,   nil,
   nil,    17,    21,    18,    19,    20,    13,    22,   nil,    15,
    14,    16,   nil,   nil,    11,   nil,    17,    21,    18,    19,
    20,    13,    22,   nil,    15,    14,    16,   nil,   nil,    11,
   nil,    17,    21,    18,    19,    20,    13,    22,   nil,    15,
    14,    16,   nil,   nil,    11,   nil,    17,    21,    18,    19,
    20,    13,    22,   nil,    15,    14,    16,   nil,   nil,   nil,
   nil,    17,    21,    18,    19,    20,    13,    22,   nil,    15,
    14,    16,   nil,   nil,    11,   nil,    17,    21,    18,    19,
    20,    13,    22,   nil,    15,    14,    16,   nil,   nil,    11,
   nil,    17,    21,    18,    19,    20,    13,    22,   nil,    49,
    14,    16,   nil,   nil,    11,   nil,    17,   nil,    18,    53,
    21,    13,    19,    20,   nil,    22,   nil,    15,    14,    16,
    44,   nil,    42,    43,    17,   nil,    18,    40,   nil,   nil,
    45,    44,     7,    42,    43,   nil,   nil,   nil,    40,   nil,
   nil,    45 ]

racc_action_check = [
    56,    54,    56,    56,    55,    56,    56,    56,    56,    56,
    57,    58,    56,    65,    56,    31,    56,    49,    56,    56,
    56,     7,    68,     7,     7,    73,     7,     7,     7,     7,
     7,    78,    31,     7,    49,     7,    79,     7,    91,     7,
     7,     7,    64,    94,    64,    64,    97,    64,   100,    64,
    64,    64,   101,     0,     0,   104,    64,    66,    64,    66,
    66,    64,    66,   106,    66,    66,    66,     0,     1,     6,
     8,    66,    67,    66,    67,    67,    66,    67,    12,    67,
    67,    67,    15,    21,    24,    27,    67,    32,    67,    32,
    32,    67,    32,    28,    32,    32,    32,    30,    36,    32,
    38,    32,    69,    32,    69,    69,    32,    69,    40,    69,
    69,    69,    42,    43,    44,    45,    69,     5,    69,     5,
     5,    69,     5,    46,     5,     5,     5,    47,    48,     5,
    50,     5,    59,     5,    59,    59,     5,    59,    51,    59,
    59,    59,    52,   nil,    59,   nil,    59,   nil,    59,   nil,
    59,    59,    85,   nil,    85,    85,   nil,    85,   nil,    85,
    85,    85,   nil,   nil,    85,   nil,    85,    37,    85,    37,
    37,    85,    37,   nil,    37,    37,    37,   nil,   nil,   nil,
   nil,    37,    11,    37,    11,    11,    37,    11,   nil,    11,
    11,    11,   nil,   nil,    11,   nil,    11,    96,    11,    96,
    96,    11,    96,   nil,    96,    96,    96,   nil,   nil,    96,
   nil,    96,    39,    96,    39,    39,    96,    39,   nil,    39,
    39,    39,   nil,   nil,    39,   nil,    39,    99,    39,    99,
    99,    39,    99,   nil,    99,    99,    99,   nil,   nil,   nil,
   nil,    99,    33,    99,    33,    33,    99,    33,   nil,    33,
    33,    33,   nil,   nil,    33,   nil,    33,    74,    33,    74,
    74,    33,    74,   nil,    74,    74,    74,   nil,   nil,    74,
   nil,    74,    18,    74,    18,    18,    74,    18,   nil,    18,
    18,    18,   nil,   nil,    18,   nil,    18,   nil,    18,    18,
    13,    18,    13,    13,   nil,    13,   nil,    13,    13,    13,
    17,   nil,    17,    17,    13,   nil,    13,    17,   nil,   nil,
    17,    70,    17,    70,    70,   nil,   nil,   nil,    70,   nil,
   nil,    70 ]

racc_action_pointer = [
    48,    68,   nil,   nil,   nil,   110,    50,    14,    70,   nil,
   nil,   175,    74,   283,   nil,    54,   nil,   293,   265,   nil,
   nil,    69,   nil,   nil,    64,   nil,   nil,    83,    79,   nil,
    95,     4,    80,   235,   nil,   nil,    78,   160,    96,   205,
    97,   nil,   104,   105,   100,   107,   121,   105,   106,     6,
   128,   114,   118,   nil,   -21,   -17,    -7,    -8,    -3,   125,
   nil,   nil,   nil,   nil,    35,   -16,    50,    65,     0,    95,
   304,   nil,   nil,     6,   250,   nil,   nil,   nil,    28,    17,
   nil,   nil,   nil,   nil,   nil,   145,   nil,   nil,   nil,   nil,
   nil,    30,   nil,   nil,    41,   nil,   190,    24,   nil,   220,
    34,    38,   nil,   nil,    44,   nil,    45,   nil ]

racc_action_default = [
   -60,   -60,    -1,    -2,    -3,   -60,   -60,   -11,   -60,    -4,
   -31,   -60,   -43,   -60,   -47,   -48,   -49,   -35,   -60,   -56,
   -57,   -60,   -59,    -5,   -60,   -12,   -13,   -14,   -17,   -20,
   -21,   -48,   -60,   -60,   -26,   108,   -60,   -60,   -45,   -60,
   -60,   -36,   -60,   -60,   -60,   -60,   -41,   -60,   -60,   -48,
   -33,   -60,   -60,   -54,   -60,   -29,   -60,   -19,   -60,   -60,
   -24,   -25,   -32,   -44,   -60,   -60,   -60,   -60,   -60,   -60,
   -35,   -51,   -55,   -60,   -60,   -52,   -53,   -58,   -60,   -60,
   -15,   -16,   -18,   -22,   -23,   -60,   -28,   -46,   -50,   -37,
   -38,   -60,   -40,   -42,    -9,   -34,   -60,   -60,   -27,   -60,
   -60,    -6,   -30,   -39,   -60,   -10,    -7,    -8 ]

racc_goto_table = [
     9,    52,    34,     2,    63,    51,    36,    41,    26,    23,
    48,    38,     3,    25,     4,    24,    78,    84,     1,   nil,
    47,   nil,   nil,   nil,   nil,   nil,    65,    60,    61,   nil,
   nil,    87,   nil,    89,    90,   nil,    92,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    34,   nil,   nil,    86,   nil,   nil,    81,   nil,    83,
    41,    95,    80,    93,   nil,   nil,   103,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    94,   nil,   nil,   nil,
    98,   nil,    97,   105,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   101 ]

racc_goto_check = [
     5,     8,     5,     2,    15,    16,     5,    13,    10,     2,
    18,    19,     3,     9,     4,     6,     7,    14,     1,   nil,
     2,   nil,   nil,   nil,   nil,   nil,    16,     5,     5,   nil,
   nil,    15,   nil,    15,    15,   nil,    15,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     5,   nil,   nil,     5,   nil,   nil,    10,   nil,    10,
    13,    16,     9,    18,   nil,   nil,    15,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,
     5,   nil,     2,     8,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     5 ]

racc_goto_pointer = [
   nil,    18,     3,    12,    14,    -5,     8,   -39,   -17,     6,
     1,   nil,   nil,   -10,   -42,   -33,   -13,   nil,    -7,    -2 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,    50,   nil,   nil,   nil,   nil,
   nil,    27,    28,    30,   nil,    10,   nil,    46,   nil,    12 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 32, :_reduce_1,
  1, 32, :_reduce_2,
  1, 32, :_reduce_3,
  2, 34, :_reduce_4,
  2, 35, :_reduce_5,
  6, 33, :_reduce_6,
  7, 33, :_reduce_7,
  8, 33, :_reduce_8,
  3, 39, :_reduce_9,
  5, 39, :_reduce_10,
  0, 37, :_reduce_11,
  1, 37, :_reduce_12,
  1, 37, :_reduce_13,
  1, 40, :_reduce_14,
  3, 40, :_reduce_15,
  3, 40, :_reduce_16,
  1, 42, :_reduce_17,
  3, 42, :_reduce_18,
  2, 42, :_reduce_19,
  1, 42, :_reduce_20,
  1, 41, :_reduce_21,
  3, 41, :_reduce_22,
  3, 44, :_reduce_23,
  2, 43, :_reduce_24,
  2, 43, :_reduce_25,
  1, 43, :_reduce_26,
  2, 45, :_reduce_27,
  1, 45, :_reduce_28,
  0, 38, :_reduce_29,
  3, 38, :_reduce_30,
  1, 36, :_reduce_31,
  3, 36, :_reduce_32,
  1, 47, :_reduce_33,
  3, 47, :_reduce_34,
  0, 48, :_reduce_none,
  1, 48, :_reduce_36,
  3, 48, :_reduce_37,
  3, 48, :_reduce_38,
  5, 48, :_reduce_39,
  3, 48, :_reduce_40,
  1, 49, :_reduce_41,
  3, 49, :_reduce_42,
  1, 46, :_reduce_43,
  3, 46, :_reduce_44,
  2, 46, :_reduce_45,
  4, 46, :_reduce_46,
  1, 50, :_reduce_47,
  1, 50, :_reduce_48,
  1, 50, :_reduce_49,
  4, 50, :_reduce_50,
  3, 50, :_reduce_51,
  3, 50, :_reduce_52,
  3, 50, :_reduce_53,
  2, 50, :_reduce_54,
  3, 50, :_reduce_55,
  1, 50, :_reduce_56,
  1, 50, :_reduce_57,
  3, 50, :_reduce_58,
  1, 50, :_reduce_59 ]

racc_reduce_n = 60

racc_shift_n = 108

racc_token_table = {
  false => 0,
  :error => 1,
  :COMMA => 2,
  :RARROW => 3,
  :OR => 4,
  :HASH_TYPE => 5,
  :HASH_QUERY => 6,
  :CONST_BEGIN => 7,
  :RASSOC => 8,
  :FIXNUM => 9,
  :FLOAT => 10,
  :COLON => 11,
  :DOT => 12,
  :DOTS => 13,
  :ID => 14,
  :SYMBOL => 15,
  :SPECIAL_ID => 16,
  :STRING => 17,
  :PREDICATE => 18,
  :LPAREN => 19,
  :RPAREN => 20,
  :LBRACE => 21,
  :RBRACE => 22,
  :LBRACKET => 23,
  :RBRACKET => 24,
  :QUERY => 25,
  :BANG => 26,
  :STAR => 27,
  :LESS => 28,
  :GREATER => 29,
  :EOF => 30 }

racc_nt_base = 31

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "COMMA",
  "RARROW",
  "OR",
  "HASH_TYPE",
  "HASH_QUERY",
  "CONST_BEGIN",
  "RASSOC",
  "FIXNUM",
  "FLOAT",
  "COLON",
  "DOT",
  "DOTS",
  "ID",
  "SYMBOL",
  "SPECIAL_ID",
  "STRING",
  "PREDICATE",
  "LPAREN",
  "RPAREN",
  "LBRACE",
  "RBRACE",
  "LBRACKET",
  "RBRACKET",
  "QUERY",
  "BANG",
  "STAR",
  "LESS",
  "GREATER",
  "EOF",
  "$start",
  "entry",
  "method_type",
  "bare_type",
  "query_type",
  "type_expr",
  "arg_list",
  "block",
  "method_sig_list",
  "nonempty_arg_list",
  "named_arg_list",
  "arg",
  "base_arg",
  "named_arg",
  "base_arg_query_only",
  "union_type",
  "type_expr_comma_list",
  "hash_expr",
  "hash_expr_comma_list",
  "single_type" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_1(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 19)
  def _reduce_2(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 20)
  def _reduce_3(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 23)
  def _reduce_4(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 26)
  def _reduce_5(val, _values, result)
     result = RDL::Type::MethodType.new val[1].args, val[1].block, val[1].ret 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 30)
  def _reduce_6(val, _values, result)
            result = RDL::Type::MethodType.new val[1], val[3], val[5]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 33)
  def _reduce_7(val, _values, result)
            result = RDL::Type::MethodType.new val[1], val[3], RDL::Type::AnnotatedArgType.new(val[6], val[5])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 36)
  def _reduce_8(val, _values, result)
            result = RDL::Type::MethodType.new val[1], val[3], RDL::Type::DependentArgType.new(val[6], val[5], val[7])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 40)
  def _reduce_9(val, _values, result)
     result = [val[0].to_sym, val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 41)
  def _reduce_10(val, _values, result)
     result = [val[0].to_sym, val[2]] + val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 44)
  def _reduce_11(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 45)
  def _reduce_12(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 47)
  def _reduce_13(val, _values, result)
          result = [RDL::Type::FiniteHashType.new(Hash[*val[0]])]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 50)
  def _reduce_14(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 51)
  def _reduce_15(val, _values, result)
     result = val[2].unshift val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 52)
  def _reduce_16(val, _values, result)
     # named arg list must come last
      result = [val[0], RDL::Type::FiniteHashType.new(Hash[*val[2]])]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_17(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 57)
  def _reduce_18(val, _values, result)
    result = RDL::Type::DependentArgType.new(val[1], val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 58)
  def _reduce_19(val, _values, result)
     result = RDL::Type::AnnotatedArgType.new(val[1], val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 59)
  def _reduce_20(val, _values, result)
     result = RDL::Type::DotsQuery.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 61)
  def _reduce_21(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 62)
  def _reduce_22(val, _values, result)
     result = val[0] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 64)
  def _reduce_23(val, _values, result)
     result = [val[0].to_sym, val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 67)
  def _reduce_24(val, _values, result)
     result = RDL::Type::OptionalType.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 68)
  def _reduce_25(val, _values, result)
     result = RDL::Type::VarargType.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 69)
  def _reduce_26(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 71)
  def _reduce_27(val, _values, result)
     result = RDL::Type::OptionalType.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 72)
  def _reduce_28(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 75)
  def _reduce_29(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 76)
  def _reduce_30(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 79)
  def _reduce_31(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 80)
  def _reduce_32(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 83)
  def _reduce_33(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 84)
  def _reduce_34(val, _values, result)
     result = [val[0]] + val[2] 
    result
  end
.,.,

# reduce 35 omitted

module_eval(<<'.,.,', 'parser.racc', 87)
  def _reduce_36(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 88)
  def _reduce_37(val, _values, result)
     result = [val[0].to_i, val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 89)
  def _reduce_38(val, _values, result)
     result = [val[0].to_f, val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 91)
  def _reduce_39(val, _values, result)
        result = [Kernel.const_get(val[0]), val[2]]
  
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 93)
  def _reduce_40(val, _values, result)
     result = [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 96)
  def _reduce_41(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 97)
  def _reduce_42(val, _values, result)
     result = val[0] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 100)
  def _reduce_43(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 101)
  def _reduce_44(val, _values, result)
     result = RDL::Type::UnionType.new val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 102)
  def _reduce_45(val, _values, result)
     result = RDL::Type::NonNullType.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_46(val, _values, result)
     result = RDL::Type::UnionType.new(RDL::Type::NonNullType.new(val[1]), val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 106)
  def _reduce_47(val, _values, result)
     result = RDL::Type::SingletonType.new(val[0].to_sym) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 108)
  def _reduce_48(val, _values, result)
          if val[0] == 'nil' then
        result = $__rdl_nil_type
      elsif val[0] == 'true' then
        result = $__rdl_true_type
      elsif val[0] == 'false'
        result = $__rdl_false_type
      elsif val[0] =~ /^[a-z_]+\w*\'?/ then
        result = RDL::Type::VarType.new(val[0].to_sym)
      else
        result = RDL::Type::NominalType.new val[0]
      end
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 121)
  def _reduce_49(val, _values, result)
          if $__rdl_special_types.has_key? val[0] then
        result = $__rdl_special_types[val[0]]
      else
        fail "Unexpected special type identifier #{val[0]}"
      end
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 128)
  def _reduce_50(val, _values, result)
          n = RDL::Type::NominalType.new(val[0])
      result = RDL::Type::GenericType.new(n, *val[2])
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 131)
  def _reduce_51(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 133)
  def _reduce_52(val, _values, result)
          result = RDL::Type::TupleType.new(*val[1])
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 136)
  def _reduce_53(val, _values, result)
          result = RDL::Type::StructuralType.new(Hash[*val[1]])
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 139)
  def _reduce_54(val, _values, result)
          result = RDL::Type::TupleType.new
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 142)
  def _reduce_55(val, _values, result)
          result = RDL::Type::FiniteHashType.new(Hash[*val[1]])
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 144)
  def _reduce_56(val, _values, result)
     result = RDL::Type::SingletonType.new(val[0].to_i) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 145)
  def _reduce_57(val, _values, result)
     result = RDL::Type::SingletonType.new(val[0].to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 147)
  def _reduce_58(val, _values, result)
          result =  RDL::Type::SingletonType.new(Kernel.const_get(val[1]))
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 151)
  def _reduce_59(val, _values, result)
     result = RDL::Type::WildQuery.new 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser


end
