#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative 'lexer.rex'

module RDL::Type

class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 121)

def initialize()
  @yydebug = true
end

...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    18,    51,    16,    17,     4,    12,    11,    13,    48,     9,
    49,    15,    50,    14,     5,    22,    23,    18,    47,    16,
    17,    52,    12,    11,    13,    53,     9,    54,    15,    55,
    14,    56,    22,    23,    18,    58,    16,    17,    44,    12,
    11,    13,    60,     9,    41,    15,    18,    14,    16,    17,
    40,    12,    11,    13,    39,     9,    38,    15,    18,    14,
    16,    17,    65,    12,    11,    13,    28,     9,    27,    15,
    18,    14,    16,    17,    68,    12,    11,    13,     5,     9,
    70,    15,    18,    14,    16,    17,    25,    12,    11,    13,
    72,     6,    74,    15,    18,    14,    16,    17,   nil,    12,
    11,    13,   nil,   nil,   nil,    15,    18,    14,    16,    17,
   nil,    12,    11,    13,   nil,     9,   nil,    15,    18,    14,
    16,    17,   nil,    12,    11,    13,   nil,   nil,   nil,    15,
    18,    14,    16,    17,   nil,    12,    11,    13,   nil,   nil,
   nil,    15,    18,    14,    16,    17,   nil,    12,    11,    13,
   nil,   nil,   nil,    15,    18,    14,    16,    17,   nil,    12,
    11,    13,   nil,   nil,   nil,    15,    18,    14,    16,    17,
   nil,    12,    11,    13,   nil,     9,   nil,    15,    18,    14,
    16,    17,   nil,    12,    11,    13,   nil,     9,   nil,    15,
    18,    14,    16,    17,   nil,    12,    11,    13,   nil,     9,
   nil,    15,    34,    14,    32,    33,    34,    31,    32,    33,
    35,    31,   nil,   nil,    35 ]

racc_action_check = [
     5,    33,     5,     5,     0,     5,     5,     5,    30,     5,
    31,     5,    32,     5,     0,     5,     5,    40,    29,    40,
    40,    34,    40,    40,    40,    35,    40,    36,    40,    37,
    40,    38,    40,    40,    14,    39,    14,    14,    26,    14,
    14,    14,    46,    14,    21,    14,    28,    14,    28,    28,
    20,    28,    28,    28,    19,    28,    18,    28,    68,    28,
    68,    68,    52,    68,    68,    68,    12,    68,    10,    68,
     9,    68,     9,     9,    57,     9,     9,     9,    58,     9,
    65,     9,    27,     9,    27,    27,     6,    27,    27,    27,
    69,     1,    71,    27,    53,    27,    53,    53,   nil,    53,
    53,    53,   nil,   nil,   nil,    53,     4,    53,     4,     4,
   nil,     4,     4,     4,   nil,     4,   nil,     4,    70,     4,
    70,    70,   nil,    70,    70,    70,   nil,   nil,   nil,    70,
    51,    70,    51,    51,   nil,    51,    51,    51,   nil,   nil,
   nil,    51,    50,    51,    50,    50,   nil,    50,    50,    50,
   nil,   nil,   nil,    50,    49,    50,    49,    49,   nil,    49,
    49,    49,   nil,   nil,   nil,    49,    47,    49,    47,    47,
   nil,    47,    47,    47,   nil,    47,   nil,    47,    22,    47,
    22,    22,   nil,    22,    22,    22,   nil,    22,   nil,    22,
    23,    22,    23,    23,   nil,    23,    23,    23,   nil,    23,
   nil,    23,    54,    23,    54,    54,    15,    54,    15,    15,
    54,    15,   nil,   nil,    15 ]

racc_action_pointer = [
    -1,    91,   nil,   nil,   100,    -6,    86,   nil,   nil,    64,
    64,   nil,    43,   nil,    28,   200,   nil,   nil,    45,    38,
    48,    30,   172,   184,   nil,   nil,    22,    76,    40,    16,
   -12,     0,     5,    -6,    10,    18,    25,    11,    13,    18,
    11,   nil,   nil,   nil,   nil,   nil,    18,   160,   nil,   148,
   136,   124,    44,    88,   196,   nil,   nil,    71,    63,   nil,
   nil,   nil,   nil,   nil,   nil,    73,   nil,   nil,    52,    72,
   112,    78,   nil,   nil,   nil ]

racc_action_default = [
   -39,   -39,    -1,    -2,   -39,    -6,   -39,    -3,   -16,   -39,
   -28,   -30,   -31,   -32,   -39,   -20,   -36,   -37,   -39,   -39,
    -7,    -9,   -39,   -39,   -13,    75,   -39,   -39,   -39,   -18,
   -39,   -39,   -39,   -39,   -39,   -39,   -26,   -39,   -39,   -14,
    -6,   -10,   -11,   -12,   -17,   -29,   -39,   -39,   -34,   -39,
   -39,   -39,   -39,   -39,   -20,   -35,   -38,   -39,   -39,    -8,
   -33,   -19,   -21,   -22,   -23,   -39,   -25,   -27,   -39,   -39,
   -39,    -4,   -15,   -24,    -5 ]

racc_goto_table = [
     7,    24,     2,    45,    37,    26,    19,    30,    57,     3,
     1,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    42,    43,
   nil,    46,   nil,   nil,   nil,    62,    63,    64,   nil,    66,
   nil,   nil,   nil,   nil,   nil,   nil,    24,   nil,   nil,   nil,
    61,    59,   nil,    67,   nil,   nil,    73,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    69,   nil,   nil,   nil,    71 ]

racc_goto_check = [
     4,     4,     2,     9,    12,     4,     5,    10,     6,     3,
     1,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,     4,
   nil,    10,   nil,   nil,   nil,     9,     9,     9,   nil,     9,
   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,
    10,     5,   nil,    12,   nil,   nil,     9,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     2,   nil,   nil,   nil,     4 ]

racc_goto_pointer = [
   nil,    10,     2,     9,    -4,     1,   -31,   nil,   nil,   -24,
    -7,   nil,   -11,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,    29,   nil,   nil,    20,    21,     8,
   nil,    36,   nil,    10 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 27, :_reduce_1,
  1, 27, :_reduce_2,
  2, 29, :_reduce_3,
  6, 28, :_reduce_4,
  7, 28, :_reduce_5,
  0, 31, :_reduce_6,
  1, 31, :_reduce_7,
  3, 31, :_reduce_8,
  1, 33, :_reduce_9,
  2, 33, :_reduce_10,
  2, 34, :_reduce_11,
  2, 34, :_reduce_12,
  1, 34, :_reduce_13,
  0, 32, :_reduce_14,
  3, 32, :_reduce_15,
  1, 30, :_reduce_16,
  3, 30, :_reduce_17,
  1, 36, :_reduce_18,
  3, 36, :_reduce_19,
  0, 37, :_reduce_none,
  3, 37, :_reduce_21,
  3, 37, :_reduce_22,
  3, 37, :_reduce_23,
  5, 37, :_reduce_24,
  3, 37, :_reduce_25,
  1, 38, :_reduce_26,
  3, 38, :_reduce_27,
  1, 35, :_reduce_28,
  3, 35, :_reduce_29,
  1, 39, :_reduce_30,
  1, 39, :_reduce_31,
  1, 39, :_reduce_32,
  4, 39, :_reduce_33,
  3, 39, :_reduce_34,
  3, 39, :_reduce_35,
  1, 39, :_reduce_36,
  1, 39, :_reduce_37,
  3, 39, :_reduce_38 ]

racc_reduce_n = 39

racc_shift_n = 75

racc_token_table = {
  false => 0,
  :error => 1,
  :COMMA => 2,
  :RARROW => 3,
  :OR => 4,
  :DOUBLE_HASH => 5,
  :CONST_BEGIN => 6,
  :RASSOC => 7,
  :FIXNUM => 8,
  :FLOAT => 9,
  :COLON => 10,
  :ID => 11,
  :SYMBOL => 12,
  :SPECIAL_ID => 13,
  :STRING => 14,
  :LPAREN => 15,
  :RPAREN => 16,
  :LBRACE => 17,
  :RBRACE => 18,
  :LBRACKET => 19,
  :RBRACKET => 20,
  :QUERY => 21,
  :STAR => 22,
  :LESS => 23,
  :GREATER => 24,
  :EOF => 25 }

racc_nt_base = 26

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "COMMA",
  "RARROW",
  "OR",
  "DOUBLE_HASH",
  "CONST_BEGIN",
  "RASSOC",
  "FIXNUM",
  "FLOAT",
  "COLON",
  "ID",
  "SYMBOL",
  "SPECIAL_ID",
  "STRING",
  "LPAREN",
  "RPAREN",
  "LBRACE",
  "RBRACE",
  "LBRACKET",
  "RBRACKET",
  "QUERY",
  "STAR",
  "LESS",
  "GREATER",
  "EOF",
  "$start",
  "entry",
  "method_type",
  "bare_type",
  "type_expr",
  "arg_list",
  "block",
  "arg",
  "base_arg",
  "union_type",
  "type_expr_comma_list",
  "hash_expr",
  "hash_expr_comma_list",
  "single_type" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_1(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 19)
  def _reduce_2(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 23)
  def _reduce_3(val, _values, result)
            result = val[1]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 28)
  def _reduce_4(val, _values, result)
            result = RDL::Type::MethodType.new val[1], val[3], val[5]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 31)
  def _reduce_5(val, _values, result)
            result = RDL::Type::MethodType.new val[1], val[3], RDL::Type::NamedArgType.new(val[6], val[5])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 36)
  def _reduce_6(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 37)
  def _reduce_7(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 38)
  def _reduce_8(val, _values, result)
     if val[2] then result = val[2].unshift val[0] else val[0] end 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 40)
  def _reduce_9(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 41)
  def _reduce_10(val, _values, result)
     result = RDL::Type::NamedArgType.new(val[1], val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 44)
  def _reduce_11(val, _values, result)
     result = RDL::Type::OptionalType.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 45)
  def _reduce_12(val, _values, result)
     result = RDL::Type::VarargType.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 46)
  def _reduce_13(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 49)
  def _reduce_14(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 50)
  def _reduce_15(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 53)
  def _reduce_16(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 54)
  def _reduce_17(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 57)
  def _reduce_18(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 58)
  def _reduce_19(val, _values, result)
     result = [val[0]] + val[2] 
    result
  end
.,.,

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.racc', 61)
  def _reduce_21(val, _values, result)
     result = [val[0].to_sym, val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 62)
  def _reduce_22(val, _values, result)
     result = [val[0].to_i, val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 63)
  def _reduce_23(val, _values, result)
     result = [val[0].to_f, val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 65)
  def _reduce_24(val, _values, result)
        result = [Kernel.const_get(val[0]), val[2]]
  
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 67)
  def _reduce_25(val, _values, result)
     result = [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 70)
  def _reduce_26(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 71)
  def _reduce_27(val, _values, result)
     result = val[0] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 74)
  def _reduce_28(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 75)
  def _reduce_29(val, _values, result)
     result = RDL::Type::UnionType.new val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 78)
  def _reduce_30(val, _values, result)
     result = RDL::Type::SingletonType.new(val[0].to_sym) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 80)
  def _reduce_31(val, _values, result)
          if val[0] == 'nil' then
        result = RDL::Type::NilType.new
      elsif val[0] =~ /^[a-z_]+\w*\'?/ then
        result = RDL::Type::VarType.new(val[0].to_sym)
      else
        result = RDL::Type::NominalType.new val[0]
      end
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 89)
  def _reduce_32(val, _values, result)
          if $__rdl_special_types.has_key? val[0] then
        result = $__rdl_special_types[val[0]]
      else
        fail "Unexpected special type identifier #{val[0]}"
      end
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 96)
  def _reduce_33(val, _values, result)
          n = RDL::Type::NominalType.new(val[0])
      result = RDL::Type::GenericType.new(n, *val[2])
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 100)
  def _reduce_34(val, _values, result)
          result = RDL::Type::TupleType.new(*val[1])
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_35(val, _values, result)
          result = RDL::Type::FiniteHashType.new(Hash[*val[1]])
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 105)
  def _reduce_36(val, _values, result)
     result = RDL::Type::SingletonType.new(val[0].to_i) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 106)
  def _reduce_37(val, _values, result)
     result = RDL::Type::SingletonType.new(val[0].to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 108)
  def _reduce_38(val, _values, result)
          result =  RDL::Type::SingletonType.new(Kernel.const_get(val[1]))
    
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser


end
