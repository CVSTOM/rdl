require 'rdl'
class Numeric
  extend RDL 


  ## Instance Methods
  typesig(:%, "(Numeric) -> Integer or Float or Rational") 
  typesig(:+@, "() -> Numeric") 
  typesig(:-@, "() -> Numeric") 
  typesig(:<=>, "(%any) -> Fixnum") 
  typesig(:abs, "() -> Numeric") 
  typesig(:abs2, "() -> Float or Integer or Rational") 
  typesig(:angle, "() -> Fixnum or Float") 
  typesig(:arg, "() -> Fixnum or Float") 
  typesig(:ceil, "() -> Integer") 
  typesig(:coerce, "(Numeric) -> Array") 
  typesig(:conj, "() -> Numeric") 
  typesig(:conjugate, "() -> Numeric") 
  typesig(:denominator, "() -> Integer") 
  typesig(:div, "(Numeric) -> Integer") 
  typesig(:divmod, "(Numeric) -> Array") 
  typesig(:eql?, "(%any) -> %bool") 
  typesig(:fdiv, "(Numeric) -> Float") 
  typesig(:floor, "() -> Integer") 
  typesig(:i, "() -> Complex") 
  typesig(:imag, "() -> Fixnum") 
  typesig(:imaginary, "() -> Fixnum") 
  typesig(:integer?, "() -> %bool") 
  typesig(:magnitude, "() -> Numeric") 
  typesig(:modulo, "(Numeric) -> Integer or Float or Rational") 
  typesig(:nonzero?, "() -> Numeric") 
  typesig(:numerator, "() -> Integer") 
  typesig(:phase, "() -> Float or Fixnum") 
  typesig(:polar, "() -> Array") 
  typesig(:quo, "(Integer or Rational) -> Rational") 
  typesig(:quo, "(Float) -> Float")
  typesig(:real, "() -> Numeric") 
  typesig(:real?, "() -> %bool") 
  typesig(:rect, "() -> Array") 
  typesig(:rectangular, "() -> Array") 
  typesig(:remainder, "(Numeric) -> Integer or Float or Rational") 
  typesig(:round, "(?Integer) -> Integer or Float") 
  typesig(:step, "(?Integer, ?Integer) -> Enumerator") 
  typesig(:step, "(?Integer, ?Integer) {(Integer) -> %any} -> Numeric")
  typesig(:to_c, "() -> Complex") 
  typesig(:to_int, "() -> Integer") 
  typesig(:truncate, "() -> Integer") 
  typesig(:zero?, "() -> %bool") 
end
