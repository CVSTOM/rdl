require 'rdl'
require 'Time'

class Time
  extend RDL 

  ## Class Methods
  # typesig(:now)
  # typesig(:at)
  # typesig(:utc)
  # typesig(:gm)
  # typesig(:local)
  # typesig(:mktime)
  # typesig(:zone_offset)
  # typesig(:parse)
  # typesig(:strptime)
  # typesig(:rfc2822)
  # typesig(:rfc822)
  # typesig(:httpdate)
  # typesig(:xmlschema)
  # typesig(:iso8601)

  ## Instance Methods
  typesig(:+, "(Numeric) -> Time") 
  # Intersection Type # 
  typesig(:-, "(Numeric) -> Time") 
  typesig(:-, "(Time) -> Float")
  # End Intersection # 
  typesig(:<=>, "(Time) -> Fixnum") 
  typesig(:asctime, "() -> String") 
  typesig(:ctime, "() -> String") 
  typesig(:day, "() -> Fixnum") 
  typesig(:dst?, "() -> %bool") 
  typesig(:eql?, "(%any) -> %bool") 
  typesig(:friday?, "() -> %bool") 
  typesig(:getgm, "() -> Time") 
  typesig(:getlocal, "(?String) -> Time") 
  typesig(:getutc, "() -> Time") 
  typesig(:gmt?, "() -> %bool") 
  typesig(:gmt_offset, "() -> Fixnum") 
  typesig(:gmtime, "() -> Time") 
  typesig(:gmtoff, "() -> Fixnum") 
  typesig(:hash, "() -> Fixnum") 
  typesig(:hour, "() -> Fixnum") 
  typesig(:httpdate, "() -> String") 
  typesig(:inspect, "() -> String") 
  typesig(:isdst, "() -> %bool") 
  typesig(:iso8601, "(?Integer) -> Time") 
  typesig(:localtime, "(?String) -> Time") 
  typesig(:mday, "() -> Fixnum") 
  typesig(:min, "() -> Fixnum") 
  typesig(:mon, "() -> Fixnum") 
  typesig(:monday?, "() -> %bool") 
  typesig(:month, "() -> Fixnum") 
  typesig(:nsec, "() -> Integer") 
  typesig(:rfc2822, "() -> String") 
  typesig(:rfc822, "() -> String")
  typesig(:round, "(?Integer) -> Time") 
  typesig(:saturday?, "() -> %bool") 
  typesig(:sec, "() -> Fixnum") 
  typesig(:strftime, "(String) -> String") 
  typesig(:subsec, "() -> Numeric") 
  typesig(:succ, "() -> Time") 
  typesig(:sunday?, "() -> %bool") 
  typesig(:thursday?, "() -> %bool") 
  typesig(:to_a, "() -> Array") 
  typesig(:to_date, "() -> Date") 
  typesig(:to_datetime, "() -> DateTime") 
  typesig(:to_f, "() -> Float") 
  typesig(:to_i, "() -> Integer") 
  typesig(:to_r, "() -> Rational") 
  typesig(:to_s, "() -> String") 
  typesig(:to_time, "() -> Time") 
  typesig(:tuesday?, "() -> %bool") 
  typesig(:tv_nsec, "() -> Integer") 
  typesig(:tv_sec, "() -> Integer") 
  typesig(:tv_usec, "() -> Integer") 
  typesig(:usec, "() -> Integer") 
  typesig(:utc, "() -> Time") 
  typesig(:utc?, "() -> %bool") 
  typesig(:utc_offset, "() -> Fixnum") 
  typesig(:wday, "() -> Fixnum") 
  typesig(:wednesday?, "() -> %bool") 
  typesig(:yday, "() -> Fixnum") 
  typesig(:year, "() -> Fixnum") 
  typesig(:zone, "() -> String") 
end
